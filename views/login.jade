doctype html
html
  head
    meta(charset='utf-8')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='viewport' content='width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no')
    title= title
    //- Libraries
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap.min.css')
    link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/css/bootstrap-theme.min.css')
    link(rel='stylesheet', href='/stylesheets/layout.css')
    link(rel='stylesheet', href='/stylesheets/charts.css')
    script(src='https://code.jquery.com/jquery-2.1.4.min.js')
    script(src='https://code.jquery.com/ui/1.11.4/jquery-ui.min.js')
    script(src='https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js')
    script(src="//d3js.org/d3.v3.min.js" charset="utf-8")
  body
    script.
      var width = window.innerWidth || document.documentElement.clientHeight;
      var height = window.innerHeight || document.documentElement.clientHeight;
      //- console.log(width);
      //- console.log(height);
      var body = d3.select('body')
        .classed('login', true);
        
      var chart = body.append('svg')
        .attr({
          width: width,
          height: height
        })
        .style('border', 'none');
        
      var squareSize = 30
      
      var xScale = d3.scale.ordinal()
        .domain(d3.range(Math.ceil(width / squareSize)))
        .rangeRoundBands([0, width])
        
      var yScale = d3.scale.ordinal()
        .domain(d3.range(Math.ceil(height / squareSize)))
        .rangeRoundBands([0, height])
        
      xs = d3.range(Math.ceil(width/squareSize))
      ys = d3.range(Math.ceil(height/squareSize))
      
      //- Create matrix of coordinate objects
      var matrix = []
      for (var i = 0; i < ys.length; i++) {
        matrix[i] = [];
        for (var j = 0; j < xs.length; j++) {
          matrix[i][j] = {};
          matrix[i][j].x = j;
          matrix[i][j].y = i;
        }
      }
      
      var ygroups = chart.selectAll('g')
        .data(ys)
        .enter()
        .append('g')
        .attr('transform', function(d, i) {return 'translate(0, ' + i*squareSize + ')'});
        
      ygroups.selectAll('rect')
        .data(xs)
        .enter()
        .append('rect')                
        .attr({
          x: 0,
          height: squareSize,
          width:'0px',
          class: 'loginRect'
        })        
        .transition()
        .delay(function(d, i) { return (Math.sqrt(i) * 5) * Math.random() * 30 } )
        .duration(1000)
        .attr({
          x: function(d, i) { return i * squareSize },          
          width: squareSize
        });        

      //- chart.append('rect')
      //-   .attr({
      //-       x: 10,
      //-       y: 10,
      //-       width: '20px',
      //-       height: '20px',
      //-       fill: 'red'
      //-   });
