//- D3 API - https://github.com/mbostock/d3/wiki/API-Reference
//- D3 Book - http://chimera.labs.oreilly.com/books/1230000000345/index.html
//- http://chimera.labs.oreilly.com/books/1230000000345/ch05.html#_bound_and_determined
script(src="//d3js.org/d3.v3.min.js" charset="utf-8")
#chart
script.
  //- Draw SVG
  var w = 800;
  var h = 600;  
  var svg = d3.select('#chart')
    .append('svg')
    .attr({
      width: w,
      height: h
    });   
    
  //- Define Triangle Line Markers
  var def = svg.append('defs')
  var marker = def.append('marker')
    .attr({
      id: 'triangle',
      viewBox: '0 0 10 10',
      refX: 1,
      refY: 5,
      markerWidth: 6,
      markerHeight: 6,
      orient: 'auto'
    });
  var path = marker.append('path')
    .attr('d', 'M 0 0 L 10 5 L 0 10 z');
  
  //- Load data and draw chart
  d3.json('/data/factorMap.json', function(factorData) {    
    
    //- Draw Factor Arrows
    var factorArrows = svg.selectAll('line')
      .data(factorData.factors)
      .enter()
      .append('line')
      .attr({
        x1: function(d) { return d.x1 },
        y1: function(d) { return d.y1 },
        x2: function(d) { return d.x2 },
        y2: function(d) { return d.y2 },
        stroke: 'black',
        'stroke-width': 2,
        'marker-end': 'url(#triangle)'
      });
    
    //- Draw Clusters
    var clusterCircles = svg.selectAll('circle')
      .data(factorData.clusters)
      .enter()
      .append('circle')
      .attr({
        class: 'clusterCircle',
        id: function(d) { return d.id; },
        cx: function(d) { return d.cx; },
        cy: function(d) { return d.cy; },
        r: function(d) { return d.r; }
      });
    
    //- Draw Cluster Labels
    var clusterText = svg.selectAll('text')
      .data(factorData.clusters)
      .enter()
      .append('text')
      .text(function(d) { return d.label })
      .attr({
        x: function(d) { return d.cx },
        y: function(d) { return d.cy - d.r - 10 },
        'text-anchor' : 'middle'
      });
  });
